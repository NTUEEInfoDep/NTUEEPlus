{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/preview.jsx","webpack:///./src/components/seo.jsx"],"names":["IndexPage","props","_this","_React$Component","call","this","markdowns","data","allMarkdownRemark","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","meta","name","content","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","style","backgroundColor","margin","width","padding","color","edges","map","item","i","_components_preview__WEBPACK_IMPORTED_MODULE_5__","node","to","frontmatter","path","key","React","Component","query","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","Header","background","marginBottom","maxWidth","textDecoration","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","_header__WEBPACK_IMPORTED_MODULE_4__","siteTitle","site","siteMetadata","paddingTop","textAlign","fontFamily","marginTop","Date","getFullYear","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","Preview","className","quote","src","alt","height","SEO","description","lang","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-jsx-301ffff95088caf7aed6.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Preview from '../components/preview';\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super();\n    const markdowns = props.data.allMarkdownRemark;\n    this.markdowns = markdowns;\n  }\n  render() {\n    return (\n      <Layout>\n        <Helmet\n          meta={[\n            {\n              name: 'google-site-verification',\n              content: 'kd6f7vdD3Q81GN8XTMmDzETz_Iz6g8PSXb29EFAAEQA'\n            }\n          ]}\n        />\n        <SEO title=\"Home\" keywords={[`ntu`, `NTUEE+`, `ntuee+`]} />\n        <div style={{ backgroundColor: '#d1d3d9' }} />\n        <div\n          style={{\n            margin: '0 auto',\n            width: '80%',\n            padding: '20px',\n            backgroundColor: 'rgb(228, 228, 228)',\n            color: 'rgb(14, 35, 69)'\n          }}\n        >\n          <h1> 精選貼文 </h1>\n          {this.markdowns.edges.map((item, i) => (\n            <Preview\n              data={item.node}\n              to={`${item.node.frontmatter.path}`}\n              key={i}\n            />\n          ))}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            path\n            tags\n            title\n            quote\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst Header = () => (\n  <header\n    style={{\n      background: `#0f2345`,\n      marginBottom: `1.45rem`\n    }}\n  >\n    <div\n      style={{\n        maxWidth: 960,\n        padding: `1.5rem 1.0875rem`\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`\n          }}\n        >\n          NTUEE<span style={{ color: '#00bfdf' }}>+</span>\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <React.Fragment>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0\n          }}\n        >\n          <main>{children}</main>\n          <footer\n            style={{\n              textAlign: 'center',\n              fontFamily: 'sans-serif',\n              color: '#878787',\n              marginTop: '40px'\n            }}\n          >\n            NTUEE+ © {new Date().getFullYear()}\n          </footer>\n        </div>\n      </React.Fragment>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './preview.scss';\n\nconst Preview = props => (\n  <Link to={props.to} className=\"preview-container\">\n    <div>\n      <h3> {props.data.frontmatter.title} </h3>\n      <p>{props.data.frontmatter.quote}</p>\n    </div>\n    <img\n      src=\"https://i.imgur.com/ZqvTrKU.jpg\"\n      alt={props.data.frontmatter.title}\n      style={{ height: '180px' }}\n    />\n  </Link>\n);\n\nexport default Preview;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`, // 給facebook看，分享時候的資訊\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`, // 給twitter看，分享時候的資訊\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `)\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}