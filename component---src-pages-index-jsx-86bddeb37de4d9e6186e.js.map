{"version":3,"sources":["webpack:///./src/components/Preview.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.jsx"],"names":["Preview","props","react_default","a","createElement","className","data","frontmatter","title","quote","src","style","height","IndexPage","_this","_React$Component","call","this","markdowns","allMarkdownRemark","console","log","render","layout","seo","keywords","backgroundColor","margin","width","padding","color","edges","map","item","i","gatsby_browser_entry","to","node","path","components_Preview","key","React","Component","query","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Header","background","marginBottom","maxWidth","textDecoration","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","_header__WEBPACK_IMPORTED_MODULE_4__","siteTitle","site","siteMetadata","paddingTop","Date","getFullYear","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-jsx-86bddeb37de4d9e6186e.js","sourcesContent":["import React from 'react';\nimport './preview.scss';\n\nconst Preview = (props) => (\n    <div className='preview-container'>\n        <div>\n            <h3> {props.data.frontmatter.title} </h3>\n            <p>\n                {props.data.frontmatter.quote}\n            </p>\n        </div>\n        <img src='https://i.imgur.com/ZqvTrKU.jpg' style={{ height: '180px' }} />\n    </div>\n);\n\nexport default Preview;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Preview from '../components/Preview';\n\nclass IndexPage extends React.Component {\n    constructor(props) {\n        super()\n        const markdowns = props.data.allMarkdownRemark\n        this.markdowns = markdowns\n        console.log(markdowns)\n    }\n    render() {\n        return (\n            <Layout>\n                <SEO title=\"Home\" keywords={[`ntu`, `NTUEE+`, `ntuee+`]} />\n                <div style={{ backgroundColor: '#d1d3d9' }} />\n                <div style={{ margin: '0 auto', width: '80%', padding: '20px', backgroundColor: 'rgb(228, 228, 228)', color: 'rgb(14, 35, 69)' }}>\n                    <h1> 精選貼文 </h1>\n                    {\n                        this.markdowns.edges.map((item, i) => (\n                            <Link to={`${item.node.frontmatter.path}`}>\n                                <Preview data={item.node} key={i}></Preview>\n                            </Link>\n                        ))\n                    }\n                </div>\n            </Layout>\n        )\n    }\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark{\n      edges {\n        node {\n          frontmatter {\n            path\n            tags\n            title\n            quote\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst Header = () => (\n  <header\n    style={{\n      background: `#0f2345`,\n      marginBottom: `1.45rem`\n    }}\n  >\n    <div\n      style={{\n        maxWidth: 960,\n        padding: `1.5rem 1.0875rem`\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`\n          }}\n        >\n          NTUEE<span style={{ color: '#00bfdf' }}>+</span>\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <React.Fragment>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0\n          }}\n        >\n          <main>{children}</main>\n          <footer>NTUEE+ © {new Date().getFullYear()}</footer>\n        </div>\n      </React.Fragment>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`, // 給facebook看，分享時候的資訊\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`, // 給twitter看，分享時候的資訊\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `)\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}