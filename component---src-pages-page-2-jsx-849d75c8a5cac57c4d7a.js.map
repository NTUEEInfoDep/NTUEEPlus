{"version":3,"sources":["webpack:///./src/pages/page-2.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","props","a","createElement","title","keywords","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Header","style","background","marginBottom","maxWidth","padding","margin","color","textDecoration","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","_header__WEBPACK_IMPORTED_MODULE_4__","siteTitle","site","siteMetadata","paddingTop","Date","getFullYear","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-page-2-jsx-849d75c8a5cac57c4d7a.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst SecondPage = props => (\n  <Layout>\n    <SEO title=\"Page 2\" keywords={[`ntu`, `NTUEE+`, `ntuee+`]} />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport default SecondPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst Header = () => (\n  <header\n    style={{\n      background: `#0f2345`,\n      marginBottom: `1.45rem`\n    }}\n  >\n    <div\n      style={{\n        maxWidth: 960,\n        padding: `1.5rem 1.0875rem`\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`\n          }}\n        >\n          NTUEE<span style={{ color: '#00bfdf' }}>+</span>\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <React.Fragment>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0\n          }}\n        >\n          <main>{children}</main>\n          <footer>NTUEE+ © {new Date().getFullYear()}</footer>\n        </div>\n      </React.Fragment>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`, // 給facebook看，分享時候的資訊\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`, // 給twitter看，分享時候的資訊\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `)\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}